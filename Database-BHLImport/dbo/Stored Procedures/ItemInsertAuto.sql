CREATE PROCEDURE dbo.ItemInsertAuto

@ItemID INT OUTPUT,
@ImportKey NVARCHAR(50),
@ImportStatusID INT,
@ImportSourceID INT = null,
@MARCBibID NVARCHAR(50),
@BarCode NVARCHAR(200),
@ItemSequence SMALLINT = null,
@MARCItemID NVARCHAR(200) = null,
@CallNumber NVARCHAR(100) = null,
@Volume NVARCHAR(100) = null,
@InstitutionCode NVARCHAR(10) = null,
@LanguageCode NVARCHAR(10) = null,
@Sponsor NVARCHAR(100) = null,
@ItemDescription NTEXT = null,
@ScannedBy INT = null,
@PDFSize INT = null,
@VaultID INT = null,
@NumberOfFiles SMALLINT = null,
@Note NVARCHAR(255) = null,
@ItemStatusID INT,
@ScanningUser NVARCHAR(100) = null,
@ScanningDate DATETIME = null,
@PaginationCompleteUserID INT = null,
@PaginationCompleteDate DATETIME = null,
@PaginationStatusID INT = null,
@PaginationStatusUserID INT = null,
@PaginationStatusDate DATETIME = null,
@LastPageNameLookupDate DATETIME = null,
@ExternalCreationDate DATETIME = null,
@ExternalLastModifiedDate DATETIME = null,
@ExternalCreationUser INT = null,
@ExternalLastModifiedUser INT = null,
@ProductionDate DATETIME = null,
@Year NVARCHAR(20) = null,
@IdentifierBib NVARCHAR(50) = null,
@ZQuery NVARCHAR(200) = null,
@LicenseUrl NVARCHAR(MAX) = null,
@Rights NVARCHAR(MAX) = null,
@DueDiligence NVARCHAR(MAX) = null,
@CopyrightStatus NVARCHAR(MAX) = null,
@CopyrightRegion NVARCHAR(50) = null,
@CopyrightComment NVARCHAR(MAX) = null,
@CopyrightEvidence NVARCHAR(MAX) = null,
@CopyrightEvidenceOperator NVARCHAR(100) = null,
@CopyrightEvidenceDate NVARCHAR(30) = null,
@ScanningInstitutionCode NVARCHAR(10) = null,
@RightsHolderCode NVARCHAR(10) = null,
@EndYear NVARCHAR(20),
@StartVolume NVARCHAR(10),
@EndVolume NVARCHAR(10),
@StartIssue NVARCHAR(10),
@EndIssue NVARCHAR(10),
@StartNumber NVARCHAR(10),
@EndNumber NVARCHAR(10),
@StartSeries NVARCHAR(10),
@EndSeries NVARCHAR(10),
@StartPart NVARCHAR(10),
@EndPart NVARCHAR(10),
@PageProgression NVARCHAR(10)

AS 

SET NOCOUNT ON

INSERT INTO [dbo].[Item]
( 	[ImportKey],
	[ImportStatusID],
	[ImportSourceID],
	[MARCBibID],
	[BarCode],
	[ItemSequence],
	[MARCItemID],
	[CallNumber],
	[Volume],
	[InstitutionCode],
	[LanguageCode],
	[Sponsor],
	[ItemDescription],
	[ScannedBy],
	[PDFSize],
	[VaultID],
	[NumberOfFiles],
	[Note],
	[ItemStatusID],
	[ScanningUser],
	[ScanningDate],
	[PaginationCompleteUserID],
	[PaginationCompleteDate],
	[PaginationStatusID],
	[PaginationStatusUserID],
	[PaginationStatusDate],
	[LastPageNameLookupDate],
	[ExternalCreationDate],
	[ExternalLastModifiedDate],
	[ExternalCreationUser],
	[ExternalLastModifiedUser],
	[ProductionDate],
	[CreatedDate],
	[LastModifiedDate],
	[Year],
	[IdentifierBib],
	[ZQuery],
	[LicenseUrl],
	[Rights],
	[DueDiligence],
	[CopyrightStatus],
	[CopyrightRegion],
	[CopyrightComment],
	[CopyrightEvidence],
	[CopyrightEvidenceOperator],
	[CopyrightEvidenceDate],
	[ScanningInstitutionCode],
	[RightsHolderCode],
	[EndYear],
	[StartVolume],
	[EndVolume],
	[StartIssue],
	[EndIssue],
	[StartNumber],
	[EndNumber],
	[StartSeries],
	[EndSeries],
	[StartPart],
	[EndPart],
	[PageProgression] )
VALUES
( 	@ImportKey,
	@ImportStatusID,
	@ImportSourceID,
	@MARCBibID,
	@BarCode,
	@ItemSequence,
	@MARCItemID,
	@CallNumber,
	@Volume,
	@InstitutionCode,
	@LanguageCode,
	@Sponsor,
	@ItemDescription,
	@ScannedBy,
	@PDFSize,
	@VaultID,
	@NumberOfFiles,
	@Note,
	@ItemStatusID,
	@ScanningUser,
	@ScanningDate,
	@PaginationCompleteUserID,
	@PaginationCompleteDate,
	@PaginationStatusID,
	@PaginationStatusUserID,
	@PaginationStatusDate,
	@LastPageNameLookupDate,
	@ExternalCreationDate,
	@ExternalLastModifiedDate,
	@ExternalCreationUser,
	@ExternalLastModifiedUser,
	@ProductionDate,
	getdate(),
	getdate(),
	@Year,
	@IdentifierBib,
	@ZQuery,
	@LicenseUrl,
	@Rights,
	@DueDiligence,
	@CopyrightStatus,
	@CopyrightRegion,
	@CopyrightComment,
	@CopyrightEvidence,
	@CopyrightEvidenceOperator,
	@CopyrightEvidenceDate,
	@ScanningInstitutionCode,
	@RightsHolderCode,
	@EndYear,
	@StartVolume,
	@EndVolume,
	@StartIssue,
	@EndIssue,
	@StartNumber,
	@EndNumber,
	@StartSeries,
	@EndSeries,
	@StartPart,
	@EndPart,
	@PageProgression )

SET @ItemID = Scope_Identity()

IF @@ERROR <> 0
BEGIN
	-- raiserror will throw a SqlException
	RAISERROR('An error occurred in procedure dbo.ItemInsertAuto. No information was inserted as a result of this request.', 16, 1)
	RETURN 9 -- error occurred
END
ELSE BEGIN
	SELECT
		[ItemID],
		[ImportKey],
		[ImportStatusID],
		[ImportSourceID],
		[MARCBibID],
		[BarCode],
		[ItemSequence],
		[MARCItemID],
		[CallNumber],
		[Volume],
		[InstitutionCode],
		[LanguageCode],
		[Sponsor],
		[ItemDescription],
		[ScannedBy],
		[PDFSize],
		[VaultID],
		[NumberOfFiles],
		[Note],
		[ItemStatusID],
		[ScanningUser],
		[ScanningDate],
		[PaginationCompleteUserID],
		[PaginationCompleteDate],
		[PaginationStatusID],
		[PaginationStatusUserID],
		[PaginationStatusDate],
		[LastPageNameLookupDate],
		[ExternalCreationDate],
		[ExternalLastModifiedDate],
		[ExternalCreationUser],
		[ExternalLastModifiedUser],
		[ProductionDate],
		[CreatedDate],
		[LastModifiedDate],
		[Year],
		[IdentifierBib],
		[ZQuery],
		[LicenseUrl],
		[Rights],
		[DueDiligence],
		[CopyrightStatus],
		[CopyrightRegion],
		[CopyrightComment],
		[CopyrightEvidence],
		[CopyrightEvidenceOperator],
		[CopyrightEvidenceDate],
		[ScanningInstitutionCode],
		[RightsHolderCode],
		[EndYear],
		[StartVolume],
		[EndVolume],
		[StartIssue],
		[EndIssue],
		[StartNumber],
		[EndNumber],
		[StartSeries],
		[EndSeries],
		[StartPart],
		[EndPart],
		[PageProgression]	
	FROM [dbo].[Item]
	WHERE
		[ItemID] = @ItemID
	
	RETURN -- insert successful
END
GO
