@model MOBOT.BHL.Web2.Models.CreatorModel

@{
    ViewBag.Title = Model.Author.FullName + " - Biodiversity Heritage Library";
}

<nav id="sub-nav-tabs" class="no-js-hide">
    <div class="column-wrap">
        <div id="linkbar">
            <h3>By "@Model.Author.NameExtended"</h3>
            <ul>
                <li id="spanTitleSummary" class="titles">
                    <a href="#/titles" title="Books">Books/Journals (@Model.TotalBooks)</a>
                </li>
                <li id="spanSectionSummary" class="sections">
                    <a href="#/sections" title="Parts">Chapters/Articles/Treatments (@Model.TotalSegments)</a>
                </li>
            </ul>
        </div>
    </div>
</nav>
<div id="sortbar">
    <div class="column-wrap">
        <span>Sort By:</span>
        <ul>
            <li class="@(Model.Sort == "title" || Model.Sort == "" ? "activesort" : "")"><a href="/creator/@Model.Author.AuthorID/title?bpg=1&ppg=1&psize=@Model.NumPerPage">Title</a></li>
            <li class="@(Model.Sort == "author" ? "activesort" : "")"><a href="/creator/@Model.Author.AuthorID/author?bpg1&ppg=1&psize=@Model.NumPerPage">Author</a></li>
            <li class="@(Model.Sort == "year" ? "activesort" : "")"><a href="/creator/@Model.Author.AuthorID/year?bpg=1&ppg=1&psize=@Model.NumPerPage">Year</a></li>
        </ul>
        <div class="floatclear"></div>
    </div>
</div>
<div id="content" class="column-wrap clearfix">
    <section class="browse">
        <div id="sub-sections" class="column-wrap clearfix">
            <div id="titles">
                <div id="titlecontent" class="content">
                    <section>
                        @Html.Partial("_BrowsePager", new ViewDataDictionary { { "path", "/creator/" + Model.Author.AuthorID.ToString() }, { "sort", Model.Sort }, { "target", "book" }, { "bookPage", Model.BookPage }, { "partPage", Model.PartPage }, { "numPerPage", Model.NumPerPage }, { "totalPublications", Model.TotalBooks }, { "hash", "#/titles" } })
                        @Html.Partial("_BookBrowse", new ViewDataDictionary { { "searchResult", Model.BookResults }, { "showVolume", false } })
                        @Html.Partial("_BrowsePager", new ViewDataDictionary { { "path", "/creator/" + Model.Author.AuthorID.ToString() }, { "sort", Model.Sort }, { "target", "book" }, { "bookPage", Model.BookPage }, { "partPage", Model.PartPage }, { "numPerPage", Model.NumPerPage }, { "totalPublications", Model.TotalBooks }, { "hash", "#/titles" } })
                    </section>
                </div>
            </div>
            <div id="sections" class="floatclear">
                <div id="segmentcontent" class="content">
                    <section>
                        @Html.Partial("_BrowsePager", new ViewDataDictionary { { "path", "/creator/" + Model.Author.AuthorID.ToString() }, { "sort", Model.Sort }, { "target", "part" }, { "bookPage", Model.BookPage }, { "partPage", Model.PartPage }, { "numPerPage", Model.NumPerPage }, { "totalPublications", Model.TotalSegments}, { "hash", "#/sections" } })
                        @Html.Partial("_SegmentBrowse", new ViewDataDictionary { { "searchResult", Model.SegmentResults } })
                        @Html.Partial("_BrowsePager", new ViewDataDictionary { { "path", "/creator/" + Model.Author.AuthorID.ToString() }, { "sort", Model.Sort }, { "target", "part" }, { "bookPage", Model.BookPage }, { "partPage", Model.PartPage }, { "numPerPage", Model.NumPerPage }, { "totalPublications", Model.TotalSegments}, { "hash", "#/sections" } })
                    </section>
                </div>
            </div>
        </div>
    </section>
    <aside>
        <div class="authorinfo">
            <div class="ai-head">Author Details</div>
            <div class="ai-details">
                @if (!string.IsNullOrWhiteSpace(Model.Author.AuthorTypeName))
                {
                    <div class="ai-subhead">Type</div>
                    <div class="ai-value">@Model.Author.AuthorTypeName</div>
                }
                <div class="ai-subhead">Preferred Name Form</div>
                <div>@Model.Author.FullName @Model.Author.FullerForm</div>
                @if (!string.IsNullOrWhiteSpace(Model.Author.Numeration))
                {
                    <div class="ai-subhead">Numeration</div>
                    <div class="ai-value">@Model.Author.Numeration</div>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Author.Title))
                {
                    <div class="ai-subhead">Title</div>
                    <div class="ai-value">@Model.Author.Title</div>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Author.Unit))
                {
                    <div class="ai-subhead">Unit</div>
                    <div class="ai-value">@Model.Author.Unit</div>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Author.Location))
                {
                    <div class="ai-subhead">Location</div>
                    <div class="ai-value">@Model.Author.Location</div>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Author.Dates))
                {
                    <div class="ai-subhead">Dates</div>
                    <div class="ai-value">@Model.Author.Dates</div>
                }
                @if (Model.Author.AuthorIdentifiers.Count > 0)
                {
                    <div class="ai-subhead">Identifiers</div>
                    foreach (MOBOT.BHL.DataObjects.AuthorIdentifier identifier in Model.Author.AuthorIdentifiers)
                    {
                        <div class="ai-value">
                            @identifier.IdentifierLabel:
                            @if (!string.IsNullOrWhiteSpace(identifier.IdentifierValueUrl))
                            {
                                <a href="@identifier.IdentifierValueUrl" target="_blank">@identifier.IdentifierValue</a>
                            }
                            else
                            {
                                @identifier.IdentifierValue
                            }
                        </div>
                    }
                }
                @if (Model.Author.AuthorNames.Count > 1)
                {
                    <div class="ai-subhead">
                        Alternate Name Forms
                    </div>
                    foreach (MOBOT.BHL.DataObjects.AuthorName name in Model.Author.AuthorNames)
                    {
                        if (name.IsPreferredName == 0)
                        {
                            <div class="ai-value">@name.FullName @name.FullerForm</div>
                        }
                    }
                }
            </div>
            <div class="ai-foot">
            </div>
        </div>

        @Html.Action("_DonateFeature", "Partial")
        @Html.Action("_CollectionFeature", "Partial")
</aside>
</div>

@section scripts {
<script type="text/javascript">
//<![CDATA[
$(document).ready(function () {
    var subSections = $('#sub-sections').children(); //.hide();

    // Navigate to the default sub-section if no hash
    if (!location.hash) {
        if (@Model.BookResults.Count > 0) {
            window.location.replace('#/titles');
        }
        else if (@Model.SegmentResults.Count > 0) {
            window.location.replace('#/sections');
        }
        else {
            window.location.replace('#/titles');
        }
    }

    selectTab();
});

$(window).on('hashchange', function () {
    selectTab();
});

function selectTab() {
    var state = location.hash;
    var subSections = $('#sub-sections').children();

    if (!$('#sub-sections').is(':visible')) {
        $('#sub-sections').show();
    }
    var stateName = state.replace(/[^a-zA-Z0-9\s]/gi, '');
    var subSection = $('#' + stateName);
    subSections.hide();

    // Highlight selected link
    $('#linkbar a').removeClass('active');
    $('#linkbar .' + stateName + ' a').addClass('active').blur();

    // Special case
    if (stateName == 'all') {
        subSections.show();
        return false;
    }

    // Set the hash on the sort links
    $('#sortbar a').each(function () {
        $(this).attr('href', $(this).attr('href').replace('#/sections', '').replace('#/titles', '') + '#/' + stateName);
    });

    // If no default sub-section found then head on to the default otherwise show selected sub-section
    if (!subSection.length) {
        $('#titles').show();
    } else {
        subSection.show();
    }
}
//]]>
    </script>
}
