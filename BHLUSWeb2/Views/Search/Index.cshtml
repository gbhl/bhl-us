@model MOBOT.BHL.Web2.Models.SearchModel

@{
    ViewBag.Title = "Search Results";
    Layout = "~/Views/Shared/_layout.cshtml";
}

@section CSS {
    <link rel="stylesheet" href="/css/bootstrap.min.css" />
}

<nav id="sub-nav-tabs" class="no-js-hide">
    <div class="column-wrap">
        <span class="arrow search"></span>
        <div id="linkbar">
            <ul>
                @if (Model.Params.SearchCategory == "T" || string.IsNullOrWhiteSpace(Model.Params.SearchCategory))
                {
                    <li id="spanTitleSummary" class="titles">
                        <a href="#/titles" title="Books">Publications (@(Model.IsItemResultValid ? Model.ItemResult.TotalHits : 0))</a>
                    </li>
                }
                @if (Model.Params.SearchCategory == "A" || string.IsNullOrWhiteSpace(Model.Params.SearchCategory))
                {
                    <li id="spanAuthorSummary" class="authors">
                        <a href="#/authors" title="Authors">Authors (@(Model.IsAuthorResultValid ? Model.AuthorResult.TotalHits : 0))</a>
                    </li>
                }
                @if (Model.Params.SearchCategory == "S" || string.IsNullOrWhiteSpace(Model.Params.SearchCategory))
                {
                    <li id="spanSubjectSummary" class="subjects">
                        <a href="#/subjects" title="Subjects">Subjects (@(Model.IsKeywordResultValid ? Model.KeywordResult.TotalHits : 0))</a>
                    </li>
                }
                @if (Model.Params.SearchCategory == "M" || Model.Params.SearchCategory == "N" || string.IsNullOrWhiteSpace(Model.Params.SearchCategory))
                {
                    <li id="spanNameSummary" class="names">
                        <a href="#/names" title="Names">Scientific Names (@(Model.IsNameResultValid ? Model.NameResult.TotalHits : 0))</a>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>

<form id="searchForm" action="~/search" method="get">

    @Html.HiddenFor(m => m.Params.SearchTerm)
    @Html.HiddenFor(m => m.Params.TermInclude)
    @Html.HiddenFor(m => m.Params.SearchCategory)
    @Html.HiddenFor(m => m.Params.SearchType)
    @Html.HiddenFor(m => m.Params.LastName)
    @Html.HiddenFor(m => m.Params.LastNameInclude)
    @Html.HiddenFor(m => m.Params.Volume)
    @Html.HiddenFor(m => m.Params.Year)
    @Html.HiddenFor(m => m.Params.Subject)
    @Html.HiddenFor(m => m.Params.SubjectInclude)
    @Html.HiddenFor(m => m.Params.Language)
    @Html.HiddenFor(m => m.Params.Collection)
    @Html.HiddenFor(m => m.Params.Notes)
    @Html.HiddenFor(m => m.Params.NotesInclude)
    @Html.HiddenFor(m => m.Params.Text)
    @Html.HiddenFor(m => m.Params.TextInclude)
    @Html.HiddenFor(m => m.ItemPage, new { @id = "ItemPage" })
    @Html.HiddenFor(m => m.AuthorPage, new { @id = "AuthorPage" })
    @Html.HiddenFor(m => m.KeywordPage, new { @id = "KeywordPage" })
    @Html.HiddenFor(m => m.NamePage, new { @id = "NamePage" })

    <div id="page-title-query-details">
        <div class="content column-wrap">
            <div>&nbsp;</div>
            <div class="searchResultLabel">
                @if (Model.Params.SearchType == "F")
                {
                    @Html.Raw("Full-Text")
                }
                else if (Model.Params.SearchType == "C")
                {
                    @Html.Raw("Catalog ");
                }
                Results for: @Model.ParamLabel
            </div>
            @if (Model.Suggestions.Count > 0)
            {
                int numSuggest = 0;
                <div class="searchInstead">
                    Did you mean:
                    @foreach (string suggestion in Model.Suggestions)
                    {
                        <span>@(numSuggest > 0 ? ", " : "")<a href="~/search?searchTerm=@Server.UrlEncode(suggestion)&searchCat=@Model.Params.SearchCategory&stype=@Model.Params.SearchType">@Html.Raw(Server.HtmlEncode(suggestion))</a></span>
                        numSuggest++;
                    }
                </div>
            }

            <div>&nbsp;</div>
        </div>
    </div>

    <div class="content column-wrap">
        <div class="row">
            <div class="col-sm-10" id="content">
                <div id="sub-sections" class="clearfix">
                    @if (Model.Params.SearchCategory == "T" || string.IsNullOrWhiteSpace(Model.Params.SearchCategory))
                    {
                        <div id="titles" style="display: block;">
                            @if (Model.ItemResult.Items.Count > 0 && Model.TotalFacets > 0)
                            {
                                <div class="col-sm-4">
                                    <p class="facetLabel">Narrow Search By</p>
                                    @Html.Partial("_SearchFacet", new ViewDataDictionary { { "facetLabel", "Type" }, { "facetData", Model.Params.GenreFacets } })
                                    @Html.Partial("_SearchFacet", new ViewDataDictionary { { "facetLabel", "Material" }, { "facetData", Model.Params.MaterialTypeFacets } })
                                    @Html.Partial("_SearchFacet", new ViewDataDictionary { { "facetLabel", "Author" }, { "facetData", Model.Params.AuthorFacets } })
                                    @Html.Partial("_SearchFacet", new ViewDataDictionary { { "facetLabel", "Publication Date" }, { "facetData", Model.Params.DateRangeFacets } })
                                    @Html.Partial("_SearchFacet", new ViewDataDictionary { { "facetLabel", "Subject" }, { "facetData", Model.Params.KeywordFacets } })
                                    @Html.Partial("_SearchFacet", new ViewDataDictionary { { "facetLabel", "Language" }, { "facetData", Model.Params.LanguageFacets } })
                                </div>
                            }
                            <div class="content column-wrap">
                                <section class="js-hide">
                                    @if (Model.IsItemResultValid)
                                    {
                                        if (Model.ItemResult.Items.Count == 0)
                                        {
                                            <p class="searchNoResults">No publications found</p>
                                        }
                                        else
                                        {
                                            <div class="row">
                                                <div class="col-sm-10 pubResultContainer">
                                                    @if (Model.Params.SearchType == "F")
                                                    {
                                                    <div class="catOnlyControl">
                                                        Too many results?&nbsp;&nbsp;
                                                        <div class="catOnly" onclick="$('#ItemPage').val(1);$('#Params_SearchType').val('C');pagerClick('');">Search only the Catalog.</div>&nbsp;&nbsp;
                                                        <a target="_blank" rel="noopener noreferrer" href="https://about.biodiversitylibrary.org/ufaqs/how-do-i-search-the-bhl-collection/"><img src="/images/help.png" style="margin-bottom:-2px;" alt="Search help" title="What's This?" height="16" width="16" /></a>
                                                    </div>
                                                    }
                                                    @Html.Partial("_SearchPager", new ViewDataDictionary { { "searchResult", Model.ItemResult }, { "currentPageField", "ItemPage" }, { "searchTab", "" } })

                                                    @foreach (BHL.Search.ItemHit item in Model.ItemResult.Items)
                                                    {
                                                        <div class="pubResult">
                                                            <div class="row">
                                                                <div class="col-sm-9">
                                                                    <div style="padding-bottom:10px">
                                                                        @if (item.TitleId > 0)
                                                                        {
                                                                            if (string.IsNullOrWhiteSpace(item.Url))
                                                                            {
                                                                                <a href="~/item/@item.ItemId">@Html.Raw(Server.HtmlEncode(item.Title))</a>
                                                                            }
                                                                            else
                                                                            {
                                                                                <a target="_blank" rel="noopener noreferrer" class="ExtLinkBrowse" href="/item/@item.ItemId">@Html.Raw(Server.HtmlEncode(item.Title))</a>
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            if (string.IsNullOrWhiteSpace(item.Url))
                                                                            {
                                                                                if (item.StartPageId > 0)
                                                                                {
                                                                                    <a href="~/page/@item.StartPageId">@Html.Raw(Server.HtmlEncode(item.Title))</a>
                                                                                }
                                                                                else
                                                                                {
                                                                                    @Html.Raw(Server.HtmlEncode(item.Title))
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <a target="_blank" rel="noopener noreferrer" class="ExtLinkBrowse" href="@item.Url">@Html.Raw(Server.HtmlEncode(item.Title))</a>
                                                                            }
                                                                        }
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-3 pubResultLinks">
                                                                    @if (item.TitleId > 0)
                                                                    {
                                                                        <a class="titleviewbook" style="position:relative;top:-25px;" href="~/bibliography/@item.TitleId">View Metadata</a>
                                                                    }
                                                                    else
                                                                    {
                                                                        <a class="titleviewbook" style="position:relative;top:-25px;" href="~/part/@item.SegmentId">View Metadata</a>
                                                                    }
                                                                </div>
                                                            </div>
                                                            <div class="row">
                                                                <div class="col-sm-12">
                                                                    @if (!string.IsNullOrWhiteSpace(item.Genre))
                                                                    {
                                                                        <div class="pubResultLine">Type: @Html.Raw(Server.HtmlEncode(item.Genre))</div>
                                                                    }
                                                                    @if (!string.IsNullOrWhiteSpace(item.Volume) && (item.TitleId > 0))
                                                                    {
                                                                        <div class="pubResultLine">Volume: @Html.Raw(Server.HtmlEncode(item.Volume))</div>
                                                                    }
                                                                    @if (item.Authors.Count > 0)
                                                                    {
                                                                        <div class="pubResultLine">
                                                                            By: @Html.Raw(Server.HtmlEncode(string.Join(" - ", item.Authors)))
                                                                        </div>
                                                                    }
                                                                    @if (item.SegmentId > 0)
                                                                    {
                                                                        if (!string.IsNullOrWhiteSpace(item.Container))
                                                                        {
                                                                            <div class="pubResultLine">In: @Html.Raw(Server.HtmlEncode(item.Container))</div>
                                                                        }
                                                                        if (!string.IsNullOrWhiteSpace(item.Volume))
                                                                        {
                                                                            <div class="pubResultLine">Volume: @Html.Raw(Server.HtmlEncode(item.Volume))</div>
                                                                        }
                                                                        if (!string.IsNullOrWhiteSpace(item.Series))
                                                                        {
                                                                            <div class="pubResultLine">Series: @Html.Raw(Server.HtmlEncode(item.Series))</div>
                                                                        }
                                                                        if (!string.IsNullOrWhiteSpace(item.Issue))
                                                                        {
                                                                            <div class="pubResultLine">Issue: @Html.Raw(Server.HtmlEncode(item.Issue))</div>
                                                                        }
                                                                        if (!string.IsNullOrWhiteSpace(item.PageRange) && item.PageRange != "--")
                                                                        {
                                                                            <div class="pubResultLine">Pages: @Html.Raw(Server.HtmlEncode(item.PageRange))</div>
                                                                        }
                                                                        if (item.Dates.Count > 0)
                                                                        {
                                                                            <div class="pubResultLine">Date: @Html.Raw(Server.HtmlEncode(item.Dates[0]))</div>
                                                                        }
                                                                    }
                                                                    @if (!string.IsNullOrWhiteSpace(item.PublicationPlace) || !string.IsNullOrWhiteSpace(item.Publisher) || item.Dates.Count > 0)
                                                                    {
                                                                        <div class="pubResultLine">
                                                                            Publication info:
                                                                            @if (!string.IsNullOrWhiteSpace(item.PublicationPlace))
                                                                            {
                                                                                @Html.Raw(Server.HtmlEncode(item.PublicationPlace)) <text>:</text>
                                                                            }
                                                                            @Html.Raw(Server.HtmlEncode(item.Publisher))
                                                                            @if (item.Dates.Count > 0)
                                                                            {
                                                                                @Html.Raw(Server.HtmlEncode(item.Dates[0]));
                                                                                if (item.Dates.Count > 1)
                                                                                {
                                                                                    @Html.Raw(Server.HtmlEncode(item.Dates[item.Dates.Count - 1]));
                                                                                }
                                                                            }
                                                                        </div>
                                                                    }
                                                                    @if (item.TitleId > 0)
                                                                    {
                                                                        foreach (var association in item.Associations)
                                                                        {
                                                                            <div class="pubResultLine">@Html.Raw(Server.HtmlEncode(association))</div>
                                                                        }
                                                                        if (item.Contributors.Count == 1)
                                                                        {
                                                                            <div class="pubResultLine">Holding Institution: @Html.Raw(Server.HtmlEncode(item.Contributors[0]))</div>
                                                                        }
                                                                        if (item.Contributors.Count > 1)
                                                                        {
                                                                            <div class="pubResultLine">Holding Institution: Multiple Institutions</div>
                                                                        }
                                                                        if (item.Collections.Count > 0)
                                                                        {
                                                                            <div class="pubResultLine">BHL Collections: @Html.Raw(Server.HtmlEncode(string.Join(" | ", item.Collections)))</div>
                                                                        }

                                                                    }
                                                                </div>
                                                            </div>
                                                            @if (item.Highlights.Count > 0)
                                                            {
                                                                <div class="row">
                                                                    <div class="col-sm-12 highlightContainer">
                                                                        <div class="highlightHead"><img src="/images/bib_plus.gif">&nbsp;Details</div>
                                                                        <div class="highlightBody">
                                                                            @foreach (Tuple<string, string> highlight in item.Highlights)
                                                                            {
                                                                                <div class="col-sm-2 highlightLabel">
                                                                                    @Html.Raw(highlight.Item1.Replace("searchAuthors", "authors"))
                                                                                </div>
                                                                                <div class="col-sm-10 highlightText">
                                                                                    @if (highlight.Item1 == "text")
                                                                                    {@Html.Raw("...")}
                                                                                    @Html.Raw(Server.HtmlEncode(highlight.Item2).Replace("&lt;b&gt;", "<span style='font-weight:bold'>").Replace("&lt;/b&gt;", "</span>"))
                                                                                    @if (highlight.Item1 == "text")
                                                                                    {@Html.Raw("...")}
                                                                                </div>
                                                                            }
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            }
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                            @Html.Partial("_SearchPager", new ViewDataDictionary { { "searchResult", Model.ItemResult }, { "currentPageField", "ItemPage" }, { "searchTab", "" } })
                                        }
                                    }
                                    else
                                    {
                                        <p class="searchError">
                                            @if (Model.ItemResult != null)
                                            {<text>@Model.ItemResult.ErrorMessage</text>}
                                        </p>
                                    }
                                </section>
                            </div>
                        </div>
                    }
                    @if (Model.Params.SearchCategory == "A" || string.IsNullOrWhiteSpace(Model.Params.SearchCategory))
                    {
                        <div id="authors" class="floatclear" style="display: none;">
                            <div class="content column-wrap">
                                <section class="js-hide">
                                    @if (Model.IsAuthorResultValid)
                                    {
                                        if (Model.AuthorResult.Authors.Count == 0)
                                        {
                                            <p class="searchNoResults">No authors found</p>
                                        }
                                        else
                                        {
                                            <div class="nonPubResult">
                                                @Html.Partial("_SearchPager", new ViewDataDictionary { { "searchResult", Model.AuthorResult }, { "currentPageField", "AuthorPage" }, { "searchTab", "authors" } })
                                                @foreach (BHL.Search.AuthorHit author in Model.AuthorResult.Authors)
                                                {
                                                    <div class="nonPubResultLine"><a href="/creator/@author.Id">@author.PrimaryAuthorName</a></div>
                                                }
                                            </div>
                                            @Html.Partial("_SearchPager", new ViewDataDictionary { { "searchResult", Model.AuthorResult }, { "currentPageField", "AuthorPage" }, { "searchTab", "authors" } })
                                        }
                                    }
                                    else
                                    {
                                        <p class="searchError">
                                            @if (Model.AuthorResult != null)
                                            {<text>Model.AuthorResult.ErrorMessage;</text>}
                                        </p>
                                    }
                                </section>
                            </div>
                        </div>
                    }
                    @if (Model.Params.SearchCategory == "S" || string.IsNullOrWhiteSpace(Model.Params.SearchCategory))
                    {
                        <div id="subjects" class="floatclear" style="display: none;">
                            <div class="content column-wrap">
                                <section class="js-hide">
                                    @if (Model.IsKeywordResultValid)
                                    {
                                        if (Model.KeywordResult.Keywords.Count == 0)
                                        {
                                            <p class="searchNoResults">No subjects found</p>
                                        }
                                        else
                                        {
                                            <div class="nonPubResult">
                                                @Html.Partial("_SearchPager", new ViewDataDictionary { { "searchResult", Model.KeywordResult }, { "currentPageField", "KeywordPage" }, { "searchTab", "subjects" } })
                                                @foreach (BHL.Search.KeywordHit keyword in Model.KeywordResult.Keywords)
                                                {
                                                    <div class="nonPubResultLine"><a href="/subject/@Server.UrlEncode(keyword.Keyword)">@keyword.Keyword</a></div>
                                                }
                                            </div>
                                            @Html.Partial("_SearchPager", new ViewDataDictionary { { "searchResult", Model.KeywordResult }, { "currentPageField", "KeywordPage" }, { "searchTab", "subjects" } })
                                        }
                                    }
                                    else
                                    {
                                        <p class="searchError">
                                            @if (Model.KeywordResult != null)
                                            {<text>Model.KeywordResult.ErrorMessage;</text>}
                                        </p>

                                    }
                                </section>
                            </div>
                        </div>
                    }
                    @if (Model.Params.SearchCategory == "M" || Model.Params.SearchCategory == "N" || string.IsNullOrWhiteSpace(Model.Params.SearchCategory))
                    {
                        <div id="names" class="floatclear" style="display: none;">
                            <div class="content column-wrap">
                                <section class="js-hide">
                                    <div class="row">
                                        <div class="col-sm-11">
                                            <p>
                                                Biodiversity Heritage Library uses <em>taxonomic intelligence</em> tools, including 
                                                <a href="https://github.com/gnames/gnfinder" title="gnfinder" target="_blank">gnfinder</a> developed by 
                                                <a href="http://globalnames.org/" title="uBio">Global Names Architecture</a>, to locate, verify, and record scientific names located
                                                within the text of each digitized page. <b>Note:</b> The text used for this identification is uncorrected OCR, so may not include
                                                all results expected or visible in the page.
                                            </p>
                                        </div>
                                    </div>
                                    @if (Model.IsNameResultValid)
                                    {
                                        if (Model.NameResult.Names.Count == 0)
                                        {
                                            <p class="searchNoResults">No names found</p>
                                        }
                                        else
                                        {
                                            <div class="row">
                                                <div class="nonPubResult">
                                                    @Html.Partial("_SearchPager", new ViewDataDictionary { { "searchResult", Model.NameResult }, { "currentPageField", "NamePage" }, { "searchTab", "names" } })
                                                    @foreach (BHL.Search.NameHit name in Model.NameResult.Names)
                                                    {
                                                        <div class="nonPubResultLine">
                                                            <a href="/name/@Server.UrlEncode(name.Name.Replace(' ', '_').Replace('.', '$').Replace('?', '^').Replace('&', '~'))">
                                                                @name.Name
                                                            </a>
                                                        </div>
                                                    }
                                                </div>
                                                @Html.Partial("_SearchPager", new ViewDataDictionary { { "searchResult", Model.NameResult }, { "currentPageField", "NamePage" }, { "searchTab", "names" } })
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <p class="searchError">
                                            @if (Model.NameResult != null)
                                            {<text>Model.NameResult.ErrorMessage;</text>}
                                        </p>
                                    }
                                </section>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="col-sm-2">
                <p>
                    <div class="column-wrap" style="padding-left:10px; padding-bottom:5px;"></div>
                </p>

            @Html.Action("_DonateFeatureSmall", "Partial")
            <p>&nbsp;</p>
            @Html.Action("_CollectionFeatureSmall", "Partial")
        </div>
</form>
<!--
    </div>
</div>
-->

@section scripts {
    <script src="/js/libs/jquery.hoverintent.min.js"></script>
    <script src="/js/libs/jquery.text-overflow.min.js"></script>
    <script src="/js/libs/bootstrap.min.js"></script>

    <script type="text/javascript">
    //<![CDATA[
        $(document).ready(function () {
            var subSections = $('#sub-sections').children(); //.hide();

            // Navigate to the default sub-section if no hash
            if (!location.hash) {
                if (@(Model.IsItemResultValid ? Model.ItemResult.TotalHits : 0) > 0) {
                    window.location.replace('#/titles');
                }
                else if (@(Model.IsAuthorResultValid ? Model.AuthorResult.TotalHits : 0) > 0) {
                    window.location.replace('#/authors');
                }
                else if (@(Model.IsKeywordResultValid ? Model.KeywordResult.TotalHits : 0) > 0) {
                    window.location.replace('#/subjects');
                }
                else if (@(Model.IsNameResultValid ? Model.NameResult.TotalHits : 0) > 0) {
                    window.location.replace('#/names');
                }
                else {
                    window.location.replace('#/titles');
                }
            }

            selectTab();
        });

        $(window).on('hashchange', function () {
            selectTab();
        });

        function selectTab() {
            var state = location.hash;
            var subSections = $('#sub-sections').children();

            if (!$('#sub-sections').is(':visible')) {
                $('#sub-sections').show();
            }
            var stateName = state.replace(/[^a-zA-Z0-9\s]/gi, '');
            var subSection = $('#' + stateName);
            subSections.hide();

            // Highlight selected link
            $('#linkbar a').removeClass('active');
            $('#linkbar .' + stateName + ' a').addClass('active').blur();

            // Special case
            if (stateName == 'all') {
                subSections.show();
                return false;
            }

            // If no default sub-section found then head on to the default otherwise show selected sub-section
            if (!subSection.length) {
                $('#titles').show();
            } else {
                subSection.show();
            }
        }

        $(".facetHead").click(function () {
            $header = $(this);
            $content = $header.next();

            $content.slideToggle(0, function () {
                $img = $header.children("img");
                $img.attr("src", function () {
                    return $content.is(":visible") ? "/images/bib_minus.gif" : "/images/bib_plus.gif";
                });
            });
        });

        $(".facetHeadMore").click(function () {
            $header = $(this);
            $content = $header.prev();

            $content.slideToggle(0, function () {
                $a = $header.children("a");
                $a.text($content.is(":visible") ? "less..." : "more...");
            });
        });

        $(".highlightHead").click(function () {
            $header = $(this);
            $content = $header.next();
            $content.slideToggle(200, function() {
                $img = $header.children("img");
                $img.attr("src", function () {
                    return $content.is(":visible") ? "/images/bib_minus.gif" : "/images/bib_plus.gif";
                });
            });
        });

        $(".facetCheckBox").click(function () {
            $('#ItemPage').val('1');  // Reset faceted results to first page
            var qs = buildQS();
            window.location.href = '/search?' + qs;
        });

        function pagerClick(tab) {
            var qs = buildQS();
            if (tab === '') {
                window.location.href = '/search?' + qs;
            }
            else {
                window.location.href = '/search?' + qs + '#' + tab; // set tab to which to return
            }
        }

        function buildQS() {
            var qs = 'searchTerm=' + encodeURIComponent( $('#Params_SearchTerm').val() ) +
                "&tinc=" + $('#Params_TermInclude').val() +
                '&searchCat=' + $('#Params_SearchCategory').val() +
                '&stype=' + $('#Params_SearchType').val() +
                '&lname=' + encodeURIComponent( $('#Params_LastName').val() ) +
                "&ninc=" + $('#Params_LastNameInclude').val() +
                '&vol=' + encodeURIComponent( $('#Params_Volume').val() ) +
                '&yr=' + encodeURIComponent( $('#Params_Year').val() ) +
                '&subj=' + encodeURIComponent( $('#Params_Subject').val() ) +
                "&sinc=" + $('#Params_SubjectInclude').val() +
                '&lang=' + $('#Params_Language').val() +
                '&col=' + encodeURIComponent( $('#Params_Collection').val() ) +
                '&nt=' + encodeURIComponent( $('#Params_Notes').val() ) + 
                '&ntinc=' + $('#Params_NotesInclude').val() + 
                '&txt=' + encodeURIComponent( $('#Params_Text').val() ) + 
                '&txinc=' + $('#Params_TextInclude').val() + 
                '&ppage=' + $('#ItemPage').val() +
                '&apage=' + $('#AuthorPage').val() +
                '&kpage=' + $('#KeywordPage').val() +
                '&npage=' + $('#NamePage').val();

            // Add facet values
            $('.facetCheckBox:checkbox:checked').each(function () {
                qs += '&facet=' + $(this).val().replace(/~/g, '');
            });

            return qs;
        }

    //]]>
    </script>
}
