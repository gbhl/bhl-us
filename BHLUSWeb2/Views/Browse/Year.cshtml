@model MOBOT.BHL.Web2.Models.YearBrowseModel

@{
    ViewBag.Title = "Browsing Titles between " + Model.StartYear + " and " + Model.EndYear + " - Biodiversity Heritage Library";
}

<nav id="sub-nav">
    <div class="column-wrap">
        <div id="linkbar" class="lettersandnumbers">
            <ul>
                <li class="first-child"><a class="@SetClass("browse/year")" href="/browse/year">1450-1580</a></li>
                <li><a class="@SetClass("1581/1699")" href="/browse/year/1581/1699">1581-1699</a></li>
                <li><a class="@SetClass("1700/1799")" href="/browse/year/1700/1799">1700-1799</a></li>
                <li><a class="@SetClass("1800/1849")" href="/browse/year/1800/1849">1800-1849</a></li>
                <li><a class="@SetClass("1850/1899")" href="/browse/year/1850/1899">1850-1899</a></li>
                <li><a class="@SetClass("1900/1924")" href="/browse/year/1900/1924">1900-1924</a></li>
                <li><a class="@SetClass("1925/1949")" href="/browse/year/1925/1949">1925-1949</a></li>
                <li><a class="@SetClass("1950/1974")" href="/browse/year/1950/1974">1950-1974</a></li>
                <li><a class="@SetClass("1975/1999")" href="/browse/year/1975/1999">1975-1999</a></li>
                <li><a class="@SetClass("2000/" + DateTime.Now.Year)" href="/browse/year/2000/@DateTime.Now.Year">2000-@DateTime.Now.Year</a></li>
            </ul>
        </div>
    </div>
</nav>
<nav id="sub-nav-tabs" class="no-js-hide">
    <div class="column-wrap">
        <div id="linkbar">
            <ul>
                <li id="spanTitleSummary" class="titles">
                    <a href="#/titles" title="Books">
                        <span class="highlight-tab">Book/Journals</span> between @Model.StartYear and @Model.EndYear (@Model.TotalBooks.ToString())
                    </a>
                </li>
                <li id="spanSectionSummary" class="sections">
                    <a href="#/sections" title="Parts">
                        <span class="highlight-tab">Chapters/Articles/Treatments</span> between @Model.StartYear and @Model.EndYear (@Model.TotalSegments.ToString())
                    </a>
                </li>
            </ul>
        </div>
    </div>
</nav>
<div id="sortbar">
    <div class="column-wrap">
        <span>Sort By:</span>
        <ul>
            <li class="@(Model.Sort == "title" || Model.Sort == "" ? "activesort" : "")"><a href="/browse/year/@Model.StartYear/@Model.EndYear/title?bpg=1&ppg=1&psize=@Model.NumPerPage">Title</a></li>
            <li class="@(Model.Sort == "author" ? "activesort" : "")"><a href="/browse/year/@Model.StartYear/@Model.EndYear/author?bpg=1&ppg=1&psize=@Model.NumPerPage">Author</a></li>
            <li class="@(Model.Sort == "year" ? "activesort" : "")"><a href="/browse/year/@Model.StartYear/@Model.EndYear/year?bpg=1&ppg=1&psize=@Model.NumPerPage">Year</a></li>
        </ul>
        <div class="floatclear"></div>
    </div>
</div>
<div id="content" class="column-wrap clearfix">
    <section class="browse">
        <div id="sub-sections" class="column-wrap clearfix">
            <div id="titles">
                <div id="titlecontent" class="content">
                    <section>
                        @Html.Partial("_BrowsePager", new ViewDataDictionary { { "path", "/browse/year/" + Model.StartYear + "/" + Model.EndYear }, { "sort", Model.Sort }, { "target", "book" }, { "bookPage", Model.BookPage }, { "partPage", Model.PartPage }, { "numPerPage", Model.NumPerPage }, { "totalPublications", Model.TotalBooks }, { "hash", "#/titles" } })
                        @Html.Partial("_BookBrowse", new ViewDataDictionary { { "searchResult", Model.BookResults }, { "showVolume", false } })
                        @Html.Partial("_BrowsePager", new ViewDataDictionary { { "path", "/browse/year/" + Model.StartYear + "/" + Model.EndYear }, { "sort", Model.Sort }, { "target", "book" }, { "bookPage", Model.BookPage }, { "partPage", Model.PartPage }, { "numPerPage", Model.NumPerPage }, { "totalPublications", Model.TotalBooks }, { "hash", "#/titles" } })
                    </section>
                </div>
            </div>
            <div id="sections" class="floatclear">
                <div id="segmentcontent" class="content">
                    <section>
                        @Html.Partial("_BrowsePager", new ViewDataDictionary { { "path", "/browse/year/" + Model.StartYear + "/" + Model.EndYear }, { "sort", Model.Sort }, { "target", "part" }, { "bookPage", Model.BookPage }, { "partPage", Model.PartPage }, { "numPerPage", Model.NumPerPage }, { "totalPublications", Model.TotalSegments }, { "hash", "#/sections" } })
                        @Html.Partial("_SegmentBrowse", new ViewDataDictionary { { "searchResult", Model.SegmentResults } })
                        @Html.Partial("_BrowsePager", new ViewDataDictionary { { "path", "/browse/year/" + Model.StartYear + "/" + Model.EndYear }, { "sort", Model.Sort }, { "target", "part" }, { "bookPage", Model.BookPage }, { "partPage", Model.PartPage }, { "numPerPage", Model.NumPerPage }, { "totalPublications", Model.TotalSegments }, { "hash", "#/sections" } })
                    </section>
                </div>
            </div>
        </div>
    </section>
    <aside>
        @Html.Action("_DonateFeature", "Partial")
        @Html.Action("_CollectionFeature", "Partial")
    </aside>
</div>


@functions {
    public string SetClass(string page)
    {
        Boolean isActive = false;
        string pageUrl = Request.Url.AbsolutePath.ToLower();

        if (pageUrl.Contains("1450/1580") && (page.ToLower().Equals("browse/year")))
        {
            isActive = true;
        }
        else if (pageUrl.EndsWith(page.ToLower()))
        {
            isActive = true;
        }
        else if (pageUrl.EndsWith(page.ToLower() + "/title"))
        {
            isActive = true;
        }
        else if (pageUrl.EndsWith(page.ToLower() + "/author"))
        {
            isActive = true;
        }
        else if (pageUrl.EndsWith(page.ToLower() + "/year"))
        {
            isActive = true;
        }

        return isActive ? "active" : string.Empty;
    }
}

@section scripts {
    <script src="/js/libs/jquery.history.min.js"></script>
    <script src="/js/libs/jquery.hoverintent.min.js"></script>
    <script src="/js/libs/jquery.text-overflow.min.js"></script>
    <script src="/js/libs/jquery-ui-1.8.11.custom.min.js" type="text/javascript"></script>

    <script type="text/javascript">
    //<![CDATA[
    $(document).ready(function () {
        // Navigate to the default sub-section if no hash
        if (!location.hash) {
            if (@Model.BookResults.Count > 0) {
                window.location.replace('#/titles');
            }
            else if (@Model.SegmentResults.Count > 0) {
                window.location.replace('#/sections');
            }
            else {
                window.location.replace('#/titles');
            }
        }

        selectTab();
    });

    $(window).on('hashchange', function () {
        selectTab();
    });

    function selectTab() {
        var state = location.hash;
        var subSections = $('#sub-sections').children();

        if (!$('#sub-sections').is(':visible')) {
            $('#sub-sections').show();
        }

        var stateName = state.replace(/[^a-zA-Z0-9\s]/gi, '');
        var subSection = $('#' + stateName);
        subSections.hide();

        // Highlight selected link
        $('#sub-nav-tabs a').removeClass('active');
        $('#sub-nav-tabs .' + stateName + ' a').addClass('active').blur();

        // Set the hash on the main nav links
        $('#sub-nav a').each(function () {
            $(this).attr('href', $(this).attr('href').replace('#/sections', '').replace('#/titles', '') + '#/' + stateName);
        });

        // Set the hash on the sort links
        $('#sortbar a').each(function () {
            $(this).attr('href', $(this).attr('href').replace('#/sections', '').replace('#/titles', '') + '#/' + stateName);
        });

        // If no default sub-section found then head on to the default otherwise show selected sub-section
        if (!subSection.length) {
            $.History.go('/titles');
            return false;
        } else {
            subSection.show();
        }
    }
    //]]>
    </script>
}
