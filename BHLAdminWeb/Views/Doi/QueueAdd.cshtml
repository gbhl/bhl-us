@model MOBOT.BHL.AdminWeb.Models.QueueAddViewModel
@{
    ViewBag.Title = "QueueAdd";
}

<style>
    .custom-control-label {
        padding-top: 0px;
        margin-bottom: 0px;
        text-align: right;
    }

    .formField {
        padding-top: 0px;
    }

    .validation-summary-errors {
        color: red;
    }
</style>
<div>
    @Html.ActionLink("< Return to Queue", "Queue")
</div>
<br />
<span class="pageHeader">Add to DOI Queue</span>
<hr />
<br />

@using (Html.BeginForm("QueueAdd", "DOI", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    <div>
        <p><h5>Specify the items to be added to the DOI queue.</h5></p>
        <p>&nbsp;</p>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.EntityTypeID, new { @class = "custom-control-label col-md-2" })
        <div class="formField col-md-3">
            @Html.DropDownListFor(model => model.EntityTypeID, new System.Web.Mvc.SelectList(ViewBag.EntityTypes, "Value", "Text"), htmlAttributes: new { @class = "formField form-control", id = "dllEntityType", onchange = "showForms();" })
        </div>
    </div>
    <div id="titleform" style="display:none">
        <div class="form-group">
            @Html.LabelFor(m => m.TitleIDs, new { @class = "col-md-2 custom-control-label" })
            <div class="formField col-md-10">
                @Html.TextAreaFor(model => model.TitleIDs, 10, 40, null)
                <div>Enter Title IDs to be added to the queue, one ID per line.</div>
            </div>
        </div>
    </div>

    <div id="segmentform" style="display:none">
        <div class="form-group">
            <div class="formField col-md-2" style="text-align:right">
                @Html.RadioButtonFor(m => m.SegmentOption, "Segment", new { @class = "custom-control-label", id = "rdoSegment", onclick = "enableOption(this);" })
                @Html.LabelFor(m => m.SegmentIDs, new { @class = "custom-control-label", @for = "rdoSegment" })
            </div>
            <div class="formField col-md-10">
                @Html.TextAreaFor(model => model.SegmentIDs, 10, 40, new { disabled = "disabled" })
                <div>Enter Segment IDs to be added to the queue, one ID per line.</div>
            </div>
        </div>
        <div class="form-group">
            <div class="formField col-md-2" style="text-align:right">
                @Html.RadioButtonFor(m => m.SegmentOption, "Item", new { @class = "custom-control-label", id = "rdoItem", onclick = "enableOption(this);" })
                @Html.LabelFor(m => m.ItemID, new { @class = "custom-control-label", @for = "rdoItem" })
            </div>
            <div class="formField col-md-10">
                @Html.TextBoxFor(model => model.ItemID, new { disabled = "disabled" })
                <div>All Segment IDs related to the specified Item will be added to the queue.</div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="addButton" class="btn btn-default" value="Add" disabled />
            <input type="button" id="cancelButton" class="btn" value="Cancel" onclick="doCancel();"/>
        </div>
    </div>

}

<script lang="javascript">

    (function () {
        showForms();    // set up the forms on page load
    })();

    function doCancel() {
        window.location.href = "/doi/queue";
    }

    function showForms() {

        var type = document.getElementById("dllEntityType").value;
        var button = document.getElementById("addButton");

        if (type === "10") {
            document.getElementById("titleform").style.display = "block";
            document.getElementById("segmentform").style.display = "none";
            button.disabled = false;
        }
        else if (type === "40") {
            document.getElementById("titleform").style.display = "none";
            document.getElementById("segmentform").style.display = "block";
            enableOption(document.querySelector('input[name="SegmentOption"]:checked'));
            button.disabled = false;
        }
        else {
            document.getElementById("titleform").style.display = "none";
            document.getElementById("segmentform").style.display = "none";
            button.disabled = true;
        }
    }

    function enableOption(selectedOption) {
        //var txtTitle = document.getElementById("TitleID");
        var txtItem = document.getElementById("ItemID");
        var txtSegment = document.getElementById("SegmentIDs");

        switch (selectedOption.value) {
            case "Title":
                txtItem.disabled = true; txtItem.value = "";
                txtSegment.disabled = true; txtSegment.value = "";
                break;
            case "Item":
                txtItem.disabled = false;
                txtSegment.disabled = true; txtSegment.value = "";
                break;
            case "Segment":
                txtItem.disabled = true; txtItem.value = "";
                txtSegment.disabled = false;
                break;
        }
    }
</script>
