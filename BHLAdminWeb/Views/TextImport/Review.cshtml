@model MOBOT.BHL.AdminWeb.Models.TextImportModel
@section Javascript
{
    <script src="@Url.Content(System.Configuration.ConfigurationManager.AppSettings["jQueryDataTablesPath"])" type="text/javascript"></script>
    <script src="@Url.Content(System.Configuration.ConfigurationManager.AppSettings["jQueryJEditablePath"])" type="text/javascript"></script>
    <script type="text/javascript" charset="utf-8">
        $(document).ready(function() {
            var oTable = $('#filelist').DataTable( {
                "processing": true
                ,"serverSide": true
                ,"filter": false
                ,"lengthChange": false
                ,"displayLength": 100
                ,"scrollY": 100
                ,"scrollX": true
                ,"paginationType": "full_numbers"
                , "ajaxSource": '/TextImport/GetFiles?batchID=@Model.BatchID'
                ,"columns": [
                    { "data": "id", "visible": false } /* ID column */
                    , { "data": "origfilename", "sortable": true }
                    , { "data": "fileformat", "sortable": false }
                    , { "data": "itemdesc", "sortable": false }
                    , { "data": "status", "sortable": true, "sClass": "editCol" }
                    , {
                        "data": "errormessage", "sortable": false
                        , "mRender": function (msg, type, full) {
                            if (msg !== '')
                                return "<a href='#' title='Error Details' onclick='alert(\"" + msg.replace(/ \| /g, '\\n') + "\");'><img height=16 width=16 src='/images/error_yellow_16x16.png' /></a>";
                            else
                                return "";
                        }
                    }
                ]
                ,"drawCallback": function() { $("td.editCol").filter(":not(:contains('Imported'))").editable('/TextImport/UpdateFileStatus', {
                    "callback": function (sValue, settings) {
                        oTable.row(this.parentNode).data().status = sValue;
                    },
                    "submitdata": function (value, settings) {
                        return {
                            "fileID": oTable.row(this.parentNode).data().id,
                            "originalValue": this.revert
                        };
                    },
                    "height": "12px",
                    "width": "100%",
                    "data" : $(".fileStatus").html(),
                    "type" : "select"
                    } );
                }
            });

            var selectedRow = null;

            $('#filelist tbody').on('click', 'tr', function () {
                var tr = $(this).closest('tr');
                var row = oTable.row(tr);
                var itemdesc = row.data().itemdesc;
                var itemid = row.data().itemid;
                var filename = row.data().filename;

                // Highlight clicked row
                if (selectedRow) selectedRow.css("background-color", "");
                selectedRow = tr;
                tr.css("background-color", "#9FC9E6");

                // Get pages and populate list
                $.ajax({
                    url: "/textimport/GetItemPages?itemID=" + itemid + "&fileName=" + filename
                }).done(function (data) {
                    $("#pageTable > tbody").empty();

                    var tableRows;
                    data.forEach(function (pageData) {
                        tableRows += "<tr><td>";
                        tableRows += "<a href='' id='selectedPageLink" + pageData.PageID + "' data-toggle='modal' data-target='#pageDetailModal' data-pagerecordid='" + pageData.PageID + "' data-pageseqno='" + pageData.SequenceOrder + "' data-filename='" + filename + "' data-pagedesc='" + pageData.WebDisplay.replace("'", "\'") + "'>" + pageData.WebDisplay + "</a>";
                        tableRows += "</td></tr>";
                    });

                    $("#pageTable > tbody:last-child").append(tableRows);
                });

                $("#pagelist").show();
                $("#itemdesc").html(itemdesc);
            });

            $('form').submit(function (event) {
                var val = $("input[type=submit][clicked=true]").val();
                if (val === "Import Batch") {
                    var isValid = true;
                    oTable.rows().every(function (rowIdx, tableLoop, rowLoop) {
                        if (this.data().status === "Must Review") isValid = false;
                    });
                    if (!isValid) {
                        alert("Before this batch can be submitted, all files in 'Must Review' status must be reviewed and set to 'Ready to Import' or 'Rejected'.");
                        event.preventDefault();
                    }
                }
            });
            $('form input[type=submit]').click(function () {
                $('input[type=submit]', $(this).parents('form')).removeAttr("clicked");
                $(this).attr('clicked', 'true');
            });

        });

        $(document).on('show.bs.modal', '#pageDetailModal', function (event) {
            var page = $(event.relatedTarget); // Page link that triggered the modal
            // Extract info from data-* attributes
            var pageRecordId = page.data('pagerecordid');
            var pageSeqNo = page.data('pageseqno');
            var filename = page.data('filename');
            var pageDesc = page.data('pagedesc');

            var modal = $(this);
            modal.find('.modal-header h4').html('Page Label: ' + pageDesc + '<br/>Page ID: ' + pageRecordId);
            modal.find('.modal-header #pageRecordID').val(pageRecordId);

            // Show the page image and text
            var imageLink = '@Url.Content(System.Configuration.ConfigurationManager.AppSettings["PageImageUrl"])';
            modal.find('.modal-body #pageImage').hide();
            modal.find('.modal-body #pageImageLoading').show();
            modal.find('.modal-body #pageImage').attr("src", imageLink.replace("{0}", pageRecordId));
            modal.find('.modal-body #pageImage').load(function () { $('#pageImageLoading').hide(); $('#pageImage').show();});
            $.ajax("/textimport/GetOrigPageText?pageID=" + pageRecordId).done(function (data) { modal.find('.modal-body #textOriginal').html(data); });
            $.ajax("/textimport/GetNewPageText?fileName=" + filename + "&seqNo=" + pageSeqNo).done(function (data) { modal.find('.modal-body #textReplacement').html(data); });
        });
    </script>
}
@section CSS
{
    <link href="@Url.Content(System.Configuration.ConfigurationManager.AppSettings["jQueryDataTablesCSSPath"])" rel="stylesheet" type="text/css" />
}
@{
    ViewBag.Title = "Import Text - Review";
}

<div class="modal" id="pageDetailModal" tabindex="-1" role="dialog" aria-labelledby="pageReviewLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="pageReviewLabel">Review Page</h4>
                <input type="hidden" id="pageRecordID" />
            </div>
            <div class="modal-body">
                <div class="panel">
                    <div class="row">
                        <div class="col-sm-6">
                            <div>
                                <img style="display:block; margin:auto;padding-top:50px" src="~/Images/loading.gif" id="pageImageLoading" />
                                <img width="100%" id="pageImage" style="display:none"/>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="row">
                                <div class="col-sm-12">
                                    Original Text:
                                    <div id="textOriginal" style="height:290px;margin-bottom:20px;padding:5px;overflow:auto;border:1px solid black;"></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-12">
                                    Replacement Text:
                                    <div id="textReplacement" style="height:290px;margin-bottom:20px;padding:5px;overflow:auto;border:1px solid black;"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<p>
    <a href="/">< Return to Dashboard</a><br />
    <a href="/report/textimporthistory">< View Text Import History</a>
    <span style="float:right">
        <a href="#" title="How to Use This Page" onclick="window.open('/ImportTextReviewHelp.html', 'About', 'resizeable=0,scrollbars=1,height=530,width=500,status=0,toolbar=0,menubar=0,location=0');">How To Use This Page</a>
    </span>
</p>
<span class="pageHeader">@ViewBag.Title</span>
<hr />

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.HiddenFor(m => m.BatchID)

    <div class="fileStatus" style="display:none">@Html.Raw(ViewBag.TextImportBatchFileStatuses)</div>

    <div>
        <div style="margin:10px 0px; float:left;">
            <span style="font-weight:bold">Batch @Model.BatchID</span>, submitted by @Model.CreationUser, on @Model.CreationDateTime. <span style="font-weight:bold">Status: @Model.BatchStatus</span>
        </div>

        <div style="margin:10px 0px;float:right;">
            <input type="submit" name="btnImport" id="btnImport" value="Import Batch" @(Model.BatchStatusID >= 30 ? "disabled" : "") />
            <input type="submit" name="btnReject" id="btnReject" value="Reject Batch" @(Model.BatchStatusID >= 30 ? "disabled" : "") />
        </div>
    </div>

    <div style="clear:both; text-align:center; margin-top:50px; margin-bottom:10px;">
        Click a File to review the pages it contains.  Click a File Status to change it.  When done, click the Import Batch or Reject Batch button.
    </div>

    <div style="clear:both">
        <table cellpadding="0" cellspacing="0" border="0" class="display" id="filelist" style="width:100%">
            <thead>
                <tr>
                    <th></th>
                    <th width="15%">File</th>
                    <th width="20%">Format</th>
                    <th width="50%">Item</th>
                    <th width="13%">Status</th>
                    <th width="2%"></th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <style>
        #pagelist td {
            padding-top: 1px;
            padding-bottom: 1px;
            padding-right: 3px;
            padding-left: 3px;
        }
    </style>
    <p>
        <div id="pagelist" class="citeImport" style="display:none">
            <div style="background-color:#FFFFFF; padding:10px">
                <div id="itemdesc"></div>
                <div style="margin-top:20px; font-weight:bold">Contents (click to view page images and text)</div>
                <div style="overflow:auto; column-count:3; -webkit-column-count:3;-moz-column-count:3">
                    <table id="pageTable">
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </p>
}
